C51 COMPILER V9.51   BATTERY                                                               03/16/2015 15:12:35 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE BATTERY
OBJECT MODULE PLACED IN .\Battery.obj
COMPILER INVOKED BY: D:\Program Files (x86)\keil\C51\BIN\C51.EXE ..\Library\Battery.c COMPACT BROWSE INCDIR(..\Library) 
                    -DEBUG OBJECTEXTEND PRINT(.\Battery.lst) TABS(3) OBJECT(.\Battery.obj)

line level    source

   1          /*---------------------------------------------------
   2             Battery.c (v1.00)
   3             
   4             电池电量判断
   5          ---------------------------------------------------*/ 
   6          
   7          #include "main.h"
   8          #include "port.h"
   9          
  10          #include "Battery.h"
  11          #include "voice.h"
  12          #include "Delay.h"
  13          #include "AD.h"
  14          
  15          extern tWord ADC_check_result;      
  16          tByte Check2_stage = 0;
  17          
  18          /*----------------------------------------------------
  19             CheckADC() - 48V 电平
  20             Check P20's voltage.
  21          -----------------------------------------------------*/
  22          void CheckADC(void)
  23             {
  24   1         // detect the battery voltage
  25   1         ADC_check_result = GetADCResult(6);
  26   1         }
  27          
  28                                                                   
  29          /*----------------------------------------------------
  30             verifybattery() - Z2 主板不带电池
  31             voice alarm for battery status without power module
  32          void verifybattery(tWord Check2)
  33             {  
  34             // battery is sufficient, battery > 50.5V, 3.72V/4.93V
  35             if((Check2 >= 0x304))
  36                {
  37                voice_EN = 1;
  38                SC_Speech(18);    
  39                Delay(60);
  40                voice_EN = 0;
  41                }
  42             // 20km, 49.5V < battery < 50.5V, 3.68V/4.93V
  43             else if((Check2 < 0x304)&&(Check2 >= 0x2fc))    
  44                {
  45                voice_EN = 1;
  46                SC_Speech(8);  
  47                Delay(100);
  48                voice_EN = 0;
  49                }
  50             // 15km, 48.8V < battery < 49.5V, 3.65V/4.93V 
  51             else if((Check2 < 0x2fc)&&(Check2 >= 0x2f6))    
  52                {
  53                voice_EN = 1;
  54                SC_Speech(7);     
C51 COMPILER V9.51   BATTERY                                                               03/16/2015 15:12:35 PAGE 2   

  55                Delay(100);
  56                voice_EN = 0;
  57                }
  58             // 10km, 48V < battery <48.8V, 3.61V/4.9V
  59             else if((Check2 < 0x2f6)&&(Check2 >= 0x2ed))    
  60                {
  61                voice_EN = 1;
  62                SC_Speech(6);     
  63                Delay(100);
  64                voice_EN = 0;
  65                }
  66             // 5km, 46.8V < battery < 48V, 3.55V/4.9V
  67             else if((Check2 < 0x2ed)&&(Check2 >= 0x2e1))    
  68                {
  69                voice_EN =1;
  70                SC_Speech(5);     
  71                Delay(100);
  72                voice_EN = 0;
  73                }                     
  74             // battery is low, battery < 46.8V, 
  75             else if(Check2 < 0x2e1)
  76                {
  77                motorBAT_low_speech();
  78                }
  79             }
  80          -----------------------------------------------------*/
  81          
  82          /*----------------------------------------------------
  83             verifybattery() - Z2   主板带电池
  84             voice alarm for battery status without power module
  85          void verifybattery(tWord Check2)
  86             {  
  87             // battery is sufficient, battery > 50.5V, 3.13V/4.1V
  88             if(Check2 >= 0x30d)
  89                {
  90                voice_EN = 1;
  91                SC_Speech(18);    
  92                Delay(60);
  93                voice_EN = 0;
  94                Check2_stage = 5;
  95                }
  96             // 20km, 49.5V < battery < 50.5V, 3.07V/4.1V
  97             else if((Check2 < 0x30d)&&(Check2 >= 0x2fe))    
  98                {
  99                voice_EN = 1;
 100                SC_Speech(8);  
 101                Delay(100);
 102                voice_EN = 0;
 103                Check2_stage = 4;
 104                }
 105             // 15km, 48.8V < battery < 49.5V, 3.04V/4.1V 
 106             else if((Check2 < 0x2fe)&&(Check2 >= 0x2f7))    
 107                {
 108                voice_EN = 1;
 109                SC_Speech(7);     
 110                Delay(100);
 111                voice_EN = 0;
 112                Check2_stage = 3;
 113                }
 114             // 10km, 48V < battery <48.8V, 2.98V/4.1V
 115             else if((Check2 < 0x2f7)&&(Check2 >= 0x2e8))    
 116                {
C51 COMPILER V9.51   BATTERY                                                               03/16/2015 15:12:35 PAGE 3   

 117                voice_EN = 1;
 118                SC_Speech(6);     
 119                Delay(100);
 120                voice_EN = 0;
 121                Check2_stage = 2;
 122                }
 123             // 5km, 46.8V < battery < 48V, 2.91V/4.1V
 124             else if((Check2 < 0x2e8)&&(Check2 >= 0x2d6))    
 125                {
 126                voice_EN =1;
 127                SC_Speech(5);     
 128                Delay(100);
 129                voice_EN = 0;
 130                Check2_stage = 1;
 131                }                     
 132             // battery is low, battery < 46.8V, 
 133             else if(Check2 < 0x2d6)
 134                {
 135                motorBAT_low_speech();
 136                Check2_stage = 0;
 137                }
 138             }
 139          -----------------------------------------------------*/
 140          
 141          /*----------------------------------------------------
 142             verifybattery_anytime() - Z2   主板带电池
 143             voice alarm for battery status without power module
 144          void verifybattery_anytime(tWord Check2)
 145             {  
 146             // battery is sufficient, battery > 50.5V, 3.13V/4.1V
 147             if((Check2 >= 0x30d)&&(Check2_stage != 5))
 148                {
 149                voice_EN = 1;
 150                SC_Speech(18);    
 151                Delay(60);
 152                voice_EN = 0;
 153                Check2_stage = 5;
 154                }
 155             // 20km, 49.5V < battery < 50.5V, 3.07V/4.1V
 156             else if((Check2 < 0x30d)&&(Check2 >= 0x2fe)&&(Check2_stage != 4))    
 157                {
 158                voice_EN = 1;
 159                SC_Speech(8);  
 160                Delay(100);
 161                voice_EN = 0;
 162                Check2_stage = 4;
 163                }
 164             // 10km, 48V < battery <48.8V, 2.98V/4.1V
 165             else if((Check2 < 0x2fe)&&(Check2 >= 0x2e8)&&(Check2_stage != 2))    
 166                {
 167                voice_EN = 1;
 168                SC_Speech(6);     
 169                Delay(100);
 170                voice_EN = 0;
 171                Check2_stage = 2;
 172                }
 173             // battery is low, battery < 46.8V, 
 174             else if((Check2 < 0x2e8)&&(Check2_stage != 0))
 175                {
 176                motorBAT_low_speech();
 177                Check2_stage = 0;
 178                }
C51 COMPILER V9.51   BATTERY                                                               03/16/2015 15:12:35 PAGE 4   

 179             }
 180          -----------------------------------------------------*/
 181          
 182          /*----------------------------------------------------
 183             verifybattery()  - 60V 电平
 184             voice alarm for battery status with power module
 185          -----------------------------------------------------*/
 186          
 187          void verifybattery(tWord Check2)
 188             {  
 189   1         // battery is sufficient, battery > 63.5V, 3.95V/4.1V
 190   1         if((Check2 >= 0x3da))
 191   1            {
 192   2            voice_EN = 1;
 193   2            SC_Speech(18);    
 194   2            Delay(60);
 195   2            voice_EN = 0;
 196   2            }
 197   1         // 35km, 62V < battery < 63.5V, 3.86V/4.1V
 198   1         else if((Check2 < 0x3da)&&(Check2 >= 0x3c4))    
 199   1            {
 200   2            voice_EN = 1;
 201   2            SC_Speech(9);  
 202   2            Delay(100);
 203   2            voice_EN = 0;
 204   2            }
 205   1         // 20km, 60V < battery < 62V, 3.74V/4.1V
 206   1         else if((Check2 < 0x3c4)&&(Check2 >= 0x3a6))    
 207   1            {
 208   2            voice_EN = 1;
 209   2            SC_Speech(8);  
 210   2            Delay(100);
 211   2            voice_EN = 0;
 212   2            }
 213   1         // 15km, 59.3V < battery < 60V, 3.7V/4.1V 
 214   1         else if((Check2 < 0x3a6)&&(Check2 >= 0x39c))    
 215   1            {
 216   2            voice_EN = 1;
 217   2            SC_Speech(7);     
 218   2            Delay(100);
 219   2            voice_EN = 0;
 220   2            }
 221   1         // 10km, 58.3V < battery <59.3V, 3.64V/4.1V
 222   1         else if((Check2 < 0x39c)&&(Check2 >= 0x38d))    
 223   1            {
 224   2            voice_EN = 1;
 225   2            SC_Speech(6);     
 226   2            Delay(100);
 227   2            voice_EN = 0;
 228   2            }
 229   1         // 5km, 57.6V < battery < 58.3V, 3.6V/4.1V
 230   1         else if((Check2 < 0x38d)&&(Check2 >= 0x383))    
 231   1            {
 232   2            voice_EN =1;
 233   2            SC_Speech(5);     
 234   2            Delay(100);
 235   2            voice_EN = 0;
 236   2            }                     
 237   1         // battery is low, battery < 57.6V, 
 238   1         else if(Check2 < 0x383)
 239   1            {
 240   2            motorBAT_low_speech();
C51 COMPILER V9.51   BATTERY                                                               03/16/2015 15:12:35 PAGE 5   

 241   2            }
 242   1         }
 243          /*---------------------------------------------------
 244             end of file
 245          ----------------------------------------------------*/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    236    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =      1       2
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
