C51 COMPILER V9.54   SELFLEARN                                                             02/02/2016 10:30:50 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE SELFLEARN
OBJECT MODULE PLACED IN .\Objects\Selflearn.obj
COMPILER INVOKED BY: D:\Program Files (x86)\Keil_v5\C51\BIN\C51.EXE Selflearn.c COMPACT ROM(COMPACT) OPTIMIZE(8,SPEED) B
                    -ROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\Selflearn.lst) TABS(3) OBJECT(.\Objects\Selflearn.obj)

line level    source

   1          /*------------------------------------------------------------------*-
   2             A.C (v1.00)
   3            ------------------------------------------------------------------
   4             Simple switch interface code, with software debounce.
   5          
   6             COPYRIGHT
   7             ---------
   8             This code is copyright (c) 2001 by Richard Zhang.
   9          -*------------------------------------------------------------------*/
  10          
  11          #include "Main.h"
  12          #include "Port.h"
  13          
  14          #include "Selflearn.h"
  15          #include "Speech.h"
  16          #include "ISP_DataFlash.h"
  17          #include "UART.h"
  18          
  19          // ------ Public variable definitions ------------------------------
  20          bit Self_learn_G;
  21          
  22          // ------ Public variable declarations -----------------------------
  23          extern bit Received_finished_G;
  24          extern tByte Received_cache[7];
  25          
  26          // ------ Private variables ----------------------------------------
  27          tWord Self_learn_HVtime;
  28          tByte Self_learn_level;
  29          tByte Self_learn_mode_duration;
  30          
  31          // ------ Private constants ----------------------------------------
  32          
  33          /*------------------------------------------------------------------*-
  34            SWITCH_Init()
  35            Initialisation function for the switch library.
  36          -*------------------------------------------------------------------*/
  37          void Selflearn_Init(void)
  38             {
  39   1         // Set Self_learn_port (P0.1) to input mode.
  40   1         P0M1 |= 0x02;
  41   1         P0M2 &= 0xfd;
  42   1         Self_learn_level = 0;
  43   1         Self_learn_mode_duration = 0;
  44   1         }
  45          
  46          /*------------------------------------------------------------------*-
  47            Selflearn_detection()
  48            Initialisation function for the switch library.
  49          -*------------------------------------------------------------------*/
  50          void Selflearn_detection(void)
  51             {
  52   1         if((Key_switch)&&(Self_learn_port))
  53   1            {
  54   2            Self_learn_HVtime += 1;
C51 COMPILER V9.54   SELFLEARN                                                             02/02/2016 10:30:50 PAGE 2   

  55   2            if(Self_learn_HVtime >= 6000)
  56   2               {
  57   3               Self_learn_HVtime = 6001;
  58   3               Self_learn_level = 0;
  59   3               Self_learn_G = 0;
  60   3               }
  61   2            }
  62   1         else if((Key_switch)&&(!Self_learn_port))
  63   1            {
  64   2            if(Self_learn_HVtime >= 300)
  65   2               {
  66   3               Self_learn_HVtime = 0;
  67   3               Self_learn_level += 1;
  68   3               }
  69   2            }
  70   1            
  71   1         if(Self_learn_level > 5)
  72   1            {
  73   2            Self_learn_level = 0;
  74   2            Self_learn_G = 1;
  75   2            Goto_speech(Ticktack);
  76   2            }
  77   1         }
  78          
  79          /*------------------------------------------------------------------*-
  80            Self_learn_action()
  81            Initialisation function for the switch library.
  82          -*------------------------------------------------------------------*/
  83          void Self_learn_action(void)
  84             {
  85   1         if(Self_learn_G)
  86   1            {
  87   2            if(Received_finished_G)
  88   2               {
  89   3               Self_learn_programming();
  90   3               Received_finished_G = 0;
  91   3               Self_learn_G = 0;
  92   3               Goto_speech(Ticktack);
  93   3               }
  94   2            }
  95   1         }
  96          
  97          /*------------------------------------------------------------------*-
  98            Self_learn_reset()
  99            Initialisation function for the switch library.
 100          -*------------------------------------------------------------------*/
 101          void Self_learn_reset(void)
 102             {
 103   1         if(Self_learn_G)
 104   1            {
 105   2            Self_learn_mode_duration += 1;
 106   2            if(Self_learn_mode_duration > 5)
 107   2               {
 108   3               Self_learn_mode_duration = 0;
 109   3               Self_learn_G = 0;
 110   3               }
 111   2            }
 112   1         }
 113          
 114          /*------------------------------------------------------------------*-
 115            Self_learn_programming()
 116            Initialisation function for the switch library.
C51 COMPILER V9.54   SELFLEARN                                                             02/02/2016 10:30:50 PAGE 3   

 117          -*------------------------------------------------------------------*/
 118          void Self_learn_programming(void)
 119             {
 120   1         Flash_Page_Erase(0x3000);
 121   1         Flash_Write_Data(0x3000, Received_cache[5]);    
 122   1         Flash_Write_Data(0x3001, Received_cache[4]);    
 123   1         Flash_Write_Data(0x3002, Received_cache[3]);    
 124   1         Flash_Write_Data(0x3003, Received_cache[2]);    
 125   1         Flash_Write_Data(0x3004, Received_cache[1]);
 126   1         Flash_Write_Data(0x3005, Received_cache[0]);
 127   1         }
 128          
 129          /*------------------------------------------------------------------*-
 130            ---- END OF FILE -------------------------------------------------
 131          -*------------------------------------------------------------------*/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    212    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =      4    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
